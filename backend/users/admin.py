# backend/users/admin.py - –î–û–ü–û–í–ù–ï–ù–ù–Ø
from django.contrib import admin
from django.contrib.auth.admin import UserAdmin as BaseUserAdmin
from django.utils.html import format_html
from django.contrib import messages
from django.conf import settings
from django.contrib.auth.forms import UserCreationForm, UserChangeForm
from django import forms
from .models import User, Department


@admin.register(Department)
class DepartmentAdmin(admin.ModelAdmin):
    list_display = ['name', 'code', 'is_active', 'created_at']
    list_filter = ['is_active']
    search_fields = ['name', 'code']
    
    def get_queryset(self, request):
        """–ê–¥–º—ñ–Ω–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤ –Ω–µ –±–∞—á–∞—Ç—å —ñ–Ω—à—ñ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–∏"""
        qs = super().get_queryset(request)
        if request.user.is_superuser:
            return qs
        # –ó–≤–∏—á–∞–π–Ω—ñ –∞–¥–º—ñ–Ω–∏ –Ω–µ –º–æ–∂—É—Ç—å –∫–µ—Ä—É–≤–∞—Ç–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–∞–º–∏
        return qs.none()
    
    def has_add_permission(self, request):
        return request.user.is_superuser
    
    def has_change_permission(self, request, obj=None):
        return request.user.is_superuser
    
    def has_delete_permission(self, request, obj=None):
        return request.user.is_superuser


# –ü—Ä–æ–∫—Å—ñ –º–æ–¥–µ–ª—ñ –¥–ª—è —Ä–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
class TenderUser(User):
    """–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ç–µ–Ω–¥–µ—Ä—ñ–≤ (–∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —á–µ—Ä–µ–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥)"""
    class Meta:
        proxy = True
        verbose_name = "–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å —Ç–µ–Ω–¥–µ—Ä—É"
        verbose_name_plural = "–ü–µ—Ä–µ–º–æ–∂—Ü—ñ —Ç–µ–Ω–¥–µ—Ä—ñ–≤"


class StaffUser(User):
    """–°–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏ (–∞–¥–º—ñ–Ω–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤)"""
    class Meta:
        proxy = True
        verbose_name = "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É"
        verbose_name_plural = "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤"


# –§–æ—Ä–º–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ–≤ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤
class StaffUserCreationForm(UserCreationForm):
    """–§–æ—Ä–º–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É"""
    email = forms.EmailField(required=True, label='Email')
    first_name = forms.CharField(max_length=150, required=True, label="–Ü–º'—è")
    last_name = forms.CharField(max_length=150, required=True, label='–ü—Ä—ñ–∑–≤–∏—â–µ')
    department = forms.ModelChoiceField(
        queryset=Department.objects.filter(is_active=True),
        required=True,
        label='–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª'
    )
    is_superuser = forms.BooleanField(
        required=False,
        label='–°—É–ø–µ—Ä–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä',
        help_text='–°—É–ø–µ—Ä–∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–∞—é—Ç—å –ø–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Å–∏—Å—Ç–µ–º–∏'
    )
    
    class Meta:
        model = User
        fields = ('username', 'email', 'first_name', 'last_name', 'department', 'is_superuser')
    
    def save(self, commit=True):
        user = super().save(commit=False)
        user.email = self.cleaned_data['email']
        user.first_name = self.cleaned_data['first_name'] 
        user.last_name = self.cleaned_data['last_name']
        user.department = self.cleaned_data['department']
        user.is_staff = True
        user.is_superuser = self.cleaned_data['is_superuser']
        user._from_admin = True  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –≤ save()
        
        if commit:
            user.save()
        return user


class StaffUserChangeForm(UserChangeForm):
    """–§–æ—Ä–º–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É"""
    department = forms.ModelChoiceField(
        queryset=Department.objects.filter(is_active=True),
        required=False,
        label='–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª'
    )
    
    class Meta:
        model = User
        fields = '__all__'


@admin.register(TenderUser)
class TenderUserAdmin(admin.ModelAdmin):
    """–ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –¥–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ —Ç–µ–Ω–¥–µ—Ä—ñ–≤"""
    list_display = [
        'tender_number', 'company_name', 'email', 'status_colored', 
        'department_name', 'access_status', 'activation_link_display', 'created_at'
    ]
    list_filter = ['status', 'is_activated', 'department']
    search_fields = ['tender_number', 'company_name', 'email', 'edrpou']
    readonly_fields = ['tender_number', 'created_at', 'updated_at', 'activation_token', 'activation_link_field']
    actions = ['approve_users', 'decline_users', 'regenerate_activation_tokens']
    
    # –ü—Ä–∏—Ö–æ–≤—É—î–º–æ —Å–∏—Å—Ç–µ–º–Ω—ñ –ø–æ–ª—è Django
    exclude = [
        'groups', 'user_permissions', 'is_staff', 'is_superuser',
        'password', 'last_login', 'date_joined', 'is_active',
        'first_name', 'last_name', 'username'
    ]
    
    def get_queryset(self, request):
        """
        –ö–õ–Æ–ß–û–í–ê –õ–û–ì–Ü–ö–ê:
        - –°—É–ø–µ—Ä–∞–¥–º—ñ–Ω –±–∞—á–∏—Ç—å –≤—Å—ñ—Ö –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ —Ç–µ–Ω–¥–µ—Ä—ñ–≤
        - –ê–¥–º—ñ–Ω –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É –±–∞—á–∏—Ç—å –¢–Ü–õ–¨–ö–ò –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –∑—ñ –°–í–û–ì–û –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É
        """
        qs = super().get_queryset(request).filter(is_staff=False)  # –¢—ñ–ª—å–∫–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ —Ç–µ–Ω–¥–µ—Ä—ñ–≤
        
        if request.user.is_superuser:
            # –°—É–ø–µ—Ä–∞–¥–º—ñ–Ω –±–∞—á–∏—Ç—å –≤—Å—ñ—Ö
            return qs
        elif request.user.is_staff and hasattr(request.user, 'department') and request.user.department:
            # –ê–¥–º—ñ–Ω –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ –∑—ñ —Å–≤–æ–≥–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É
            return qs.filter(department=request.user.department)
        else:
            # –Ø–∫—â–æ —É –∞–¥–º—ñ–Ω–∞ –Ω–µ–º–∞—î –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É - –Ω–µ –±–∞—á–∏—Ç—å –Ω—ñ–∫–æ–≥–æ
            return qs.none()
    
    def get_list_filter(self, request):
        """–ê–¥–º—ñ–Ω–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤ –Ω–µ –±–∞—á–∞—Ç—å —Ñ—ñ–ª—å—Ç—Ä –ø–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª–∞—Ö"""
        filters = list(self.list_filter)
        if not request.user.is_superuser:
            # –ü—Ä–∏–±–∏—Ä–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤
            filters = [f for f in filters if f != 'department']
        return filters
    
    def has_add_permission(self, request):
        """–¢—ñ–ª—å–∫–∏ —Å—É–ø–µ—Ä–∞–¥–º—ñ–Ω –º–æ–∂–µ –¥–æ–¥–∞–≤–∞—Ç–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—ñ–≤ —Ç–µ–Ω–¥–µ—Ä—ñ–≤"""
        return request.user.is_superuser
    
    def has_delete_permission(self, request, obj=None):
        """–¢—ñ–ª—å–∫–∏ —Å—É–ø–µ—Ä–∞–¥–º—ñ–Ω –º–æ–∂–µ –≤–∏–¥–∞–ª—è—Ç–∏"""
        return request.user.is_superuser
    
    def has_change_permission(self, request, obj=None):
        """–ê–¥–º—ñ–Ω –º–æ–∂–µ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑—ñ —Å–≤–æ–≥–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É"""
        if request.user.is_superuser:
            return True
        if obj and hasattr(request.user, 'department'):
            return obj.department == request.user.department
        return False
    
    def department_name(self, obj):
        return obj.department.name if obj.department else '-'
    department_name.short_description = '–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª'
    
    def status_colored(self, obj):
        """–ö–æ–ª—å–æ—Ä–æ–≤–∏–π —Å—Ç–∞—Ç—É—Å"""
        colors = {
            'new': '#fa8c16',          # –ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–π
            'in_progress': '#1890ff',   # —Å–∏–Ω—ñ–π  
            'pending': '#faad14',       # –∂–æ–≤—Ç–∏–π
            'accepted': '#52c41a',      # –∑–µ–ª–µ–Ω–∏–π
            'declined': '#ff4d4f',      # —á–µ—Ä–≤–æ–Ω–∏–π
            'blocked': '#8c8c8c',       # —Å—ñ—Ä–∏–π
        }
        color = colors.get(obj.status, '#000')
        return format_html(
            '<span style="color: {}; font-weight: bold;">{}</span>',
            color, obj.get_status_display()
        )
    status_colored.short_description = '–°—Ç–∞—Ç—É—Å'
    
    def access_status(self, obj):
        """–î–æ—Å—Ç—É–ø –¥–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É"""
        if obj.is_activated and obj.status in ['in_progress', 'pending', 'accepted']:
            return format_html('<span style="color: #52c41a;">‚úÖ –ú–∞—î –¥–æ—Å—Ç—É–ø</span>')
        else:
            return format_html('<span style="color: #ff4d4f;">‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É</span>')
    access_status.short_description = '–î–æ—Å—Ç—É–ø –¥–æ –∫–∞–±—ñ–Ω–µ—Ç—É'
    
    def activation_link_display(self, obj):
        """–°–ø—Ä–æ—â–µ–Ω–µ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ª—ñ–Ω–∫—É –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó"""
        if obj.status == 'in_progress' and obj.activation_token and not obj.is_activated:
            return format_html('<span style="color: #1890ff;">üîó –Ñ –ª—ñ–Ω–∫</span>')
        elif obj.is_activated:
            return format_html('<span style="color: #52c41a;">‚úÖ –ê–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π</span>')
        elif obj.status == 'new':
            return format_html('<span style="color: #fa8c16;">‚è≥ –ß–µ–∫–∞—î —Å—Ö–≤–∞–ª–µ–Ω–Ω—è</span>')
        else:
            return format_html('<span style="color: #8c8c8c;">‚Äî</span>')
    activation_link_display.short_description = '–ê–∫—Ç–∏–≤–∞—Ü—ñ—è'
    
    def activation_link_field(self, obj):
        """–õ—ñ–Ω–∫ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
        if obj.activation_token:
            frontend_url = getattr(settings, 'FRONTEND_URL', 'http://localhost:3000')
            activation_url = f"{frontend_url}/activate/{obj.activation_token}"
            
            if obj.status == 'in_progress' and not obj.is_activated:
                return format_html(
                    '<div style="background: #f0f8f0; padding: 15px; border: 1px solid #52c41a; border-radius: 5px;">'
                    '<h4 style="color: #52c41a; margin-top: 0;">üîó –õ—ñ–Ω–∫ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó</h4>'
                    '<p><strong>–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ü–µ–π –ª—ñ–Ω–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –∞–∫–∞—É–Ω—Ç—É:</strong></p>'
                    '<textarea readonly style="width: 100%; height: 60px; font-family: monospace; font-size: 12px; background: white; border: 1px solid #ddd; padding: 8px;">{}</textarea>'
                    '<br><br>'
                    '<button type="button" onclick="copyActivationLink(\'{}\'); return false;" '
                    'style="background: #52c41a; color: white; border: none; padding: 8px 16px; cursor: pointer; border-radius: 4px;">'
                    'üìã –ö–æ–ø—ñ—é–≤–∞—Ç–∏ –ª—ñ–Ω–∫</button>'
                    '</div>',
                    activation_url, activation_url
                )
            elif obj.status == 'new':
                return format_html(
                    '<div style="background: #fff7e6; padding: 15px; border: 1px solid #faad14; border-radius: 5px;">'
                    '<h4 style="color: #fa8c16; margin-top: 0;">‚è≥ –û—á—ñ–∫—É—î —Å—Ö–≤–∞–ª–µ–Ω–Ω—è</h4>'
                    '<p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –Ω–µ —Å—Ö–≤–∞–ª–µ–Ω–∏–π. –ó–º—ñ–Ω—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ "–í –ø—Ä–æ—Ü–µ—Å—ñ" –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó.</p>'
                    '</div>'
                )
            elif obj.is_activated:
                return format_html(
                    '<div style="background: #f6ffed; padding: 15px; border: 1px solid #52c41a; border-radius: 5px;">'
                    '<h4 style="color: #52c41a; margin-top: 0;">‚úÖ –ê–∫–∞—É–Ω—Ç –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–∏–π</h4>'
                    '<p>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —É—Å–ø—ñ—à–Ω–æ –∞–∫—Ç–∏–≤—É–≤–∞–≤ —Å–≤—ñ–π –∞–∫–∞—É–Ω—Ç —ñ –º–æ–∂–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—ñ.</p>'
                    '</div>'
                )
            elif obj.status == 'declined':
                return format_html(
                    '<div style="background: #fff2f0; padding: 15px; border: 1px solid #ff4d4f; border-radius: 5px;">'
                    '<h4 style="color: #ff4d4f; margin-top: 0;">‚ùå –ó–∞—è–≤–∫–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞</h4>'
                    '<p>–ó–∞—è–≤–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –±—É–ª–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>'
                    '</div>'
                )
        return "–¢–æ–∫–µ–Ω –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"
    
    activation_link_field.short_description = '–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—î—é'
    
    # ... (–≤—Å—ñ –º–µ—Ç–æ–¥–∏ approve_users, decline_users, etc. –∑–∞–ª–∏—à–∞—é—Ç—å—Å—è –±–µ–∑ –∑–º—ñ–Ω)
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('tender_number', 'email', 'status', 'department')
        }),
        ('–î–∞–Ω—ñ –∫–æ–º–ø–∞–Ω—ñ—ó', {
            'fields': ('company_name', 'edrpou', 'legal_address', 'actual_address', 
                      'director_name', 'contact_person', 'phone')
        }),
        ('–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–∫—Ç–∏–≤–∞—Ü—ñ—î—é', {
            'fields': ('activation_link_field',),
            'classes': ('wide',)
        }),
        ('–°–∏—Å—Ç–µ–º–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('is_activated', 'activation_token', 'activation_expires', 'created_at', 'updated_at'),
            'classes': ('collapse',)
        }),
    )


@admin.register(StaffUser)
class StaffUserAdmin(admin.ModelAdmin):
    """
    ‚≠ê –ì–û–õ–û–í–ù–ê –ü–ê–ù–ï–õ–¨ –î–õ–Ø –°–£–ü–ï–†–ê–î–ú–Ü–ù–ê
    –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤
    """
    form = StaffUserChangeForm
    add_form = StaffUserCreationForm
    
    list_display = [
        'username', 'email', 'full_name', 'department_name', 
        'is_superuser_display', 'is_active', 'last_login', 'date_joined'
    ]
    list_filter = ['is_superuser', 'is_active', 'department', 'date_joined']
    search_fields = ['username', 'email', 'first_name', 'last_name']
    
    fieldsets = (
        ('–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('username', 'email', 'first_name', 'last_name')
        }),
        ('–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª —Ç–∞ –ø—Ä–∞–≤–∞', {
            'fields': ('department', 'is_superuser', 'is_active')
        }),
        ('–ü–∞—Ä–æ–ª—å', {
            'fields': ('password',),
            'description': '–î–ª—è –∑–º—ñ–Ω–∏ –ø–∞—Ä–æ–ª—é –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É —Ñ–æ—Ä–º—É.'
        }),
        ('–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è', {
            'fields': ('last_login', 'date_joined'),
            'classes': ('collapse',)
        }),
    )
    
    add_fieldsets = (
        ('–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É', {
            'classes': ('wide',),
            'fields': ('username', 'email', 'first_name', 'last_name', 'department', 'is_superuser', 'password1', 'password2'),
            'description': '–°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É. –í—ñ–Ω –º–∞—Ç–∏–º–µ –¥–æ—Å—Ç—É–ø –¥–æ Django admin –ø–∞–Ω–µ–ª—ñ.'
        }),
    )
    
    def get_queryset(self, request):
        """–ü–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ (is_staff=True)"""
        return super().get_queryset(request).filter(is_staff=True)
    
    def get_form(self, request, obj=None, **kwargs):
        """–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ä—ñ–∑–Ω—ñ —Ñ–æ—Ä–º–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è"""
        if obj is None:  # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ
            kwargs['form'] = self.add_form
        return super().get_form(request, obj, **kwargs)
    
    def has_module_permission(self, request):
        """–¢—ñ–ª—å–∫–∏ —Å—É–ø–µ—Ä–∞–¥–º—ñ–Ω –º–æ–∂–µ –∫–µ—Ä—É–≤–∞—Ç–∏ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞–º–∏"""
        return request.user.is_superuser
    
    def has_add_permission(self, request):
        return request.user.is_superuser
    
    def has_change_permission(self, request, obj=None):
        return request.user.is_superuser
    
    def has_delete_permission(self, request, obj=None):
        return request.user.is_superuser
    
    def full_name(self, obj):
        """–ü–æ–≤–Ω–µ —ñ–º'—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞"""
        if obj.first_name and obj.last_name:
            return f"{obj.first_name} {obj.last_name}"
        return obj.username
    full_name.short_description = "–ü–æ–≤–Ω–µ —ñ–º'—è"
    
    def department_name(self, obj):
        """–ù–∞–∑–≤–∞ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É"""
        return obj.department.name if obj.department else '–ù–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–æ'
    department_name.short_description = '–ü—ñ–¥—Ä–æ–∑–¥—ñ–ª'
    
    def is_superuser_display(self, obj):
        """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—É –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        if obj.is_superuser:
            return format_html('<span style="color: #ff4d4f; font-weight: bold;">üëë –°—É–ø–µ—Ä–∞–¥–º—ñ–Ω</span>')
        else:
            return format_html('<span style="color: #1890ff;">üë§ –ê–¥–º—ñ–Ω –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É</span>')
    is_superuser_display.short_description = '–¢–∏–ø'
    
    def save_model(self, request, obj, form, change):
        """–ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ —Å—Ç–≤–æ—Ä—é—î–º–æ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ"""
        if not change:  # –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á
            obj.is_staff = True
            obj._from_admin = True  # –©–æ–± –æ–±—ñ–π—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –≤ save()
        super().save_model(request, obj, form, change)