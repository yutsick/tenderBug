# Generated by Django 5.2.3 on 2025-06-19 19:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва підрозділу')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код підрозділу')),
                ('description', models.TextField(blank=True, verbose_name='Опис')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активний')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Підрозділ',
                'verbose_name_plural': 'Підрозділи',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('company_name', models.CharField(blank=True, max_length=500, verbose_name='Назва компанії')),
                ('edrpou', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator('^\\d{8,10}$', 'ЄДРПОУ має містити 8-10 цифр')], verbose_name='ЄДРПОУ')),
                ('legal_address', models.TextField(blank=True, verbose_name='Юридична адреса')),
                ('actual_address', models.TextField(blank=True, verbose_name='Фактична адреса')),
                ('director_name', models.CharField(blank=True, max_length=255, verbose_name='ПІБ директора')),
                ('contact_person', models.CharField(blank=True, max_length=255, verbose_name='Контактна особа')),
                ('tender_number', models.CharField(max_length=100, unique=True, verbose_name='Номер тендеру')),
                ('status', models.CharField(choices=[('new', 'Новий'), ('in_progress', 'В процесі'), ('pending', 'Очікує рішення'), ('accepted', 'Підтверджений'), ('declined', 'Відхилений'), ('blocked', 'Заблокований')], default='new', max_length=20, verbose_name='Статус')),
                ('role', models.CharField(choices=[('user', 'Користувач'), ('admin', 'Адміністратор'), ('superadmin', 'Суперадміністратор')], default='user', max_length=20, verbose_name='Роль')),
                ('is_activated', models.BooleanField(default=False, verbose_name='Активований')),
                ('activation_token', models.UUIDField(default=uuid.uuid4, verbose_name='Токен активації')),
                ('activation_expires', models.DateTimeField(blank=True, null=True, verbose_name='Токен діє до')),
                ('synced_to_1c', models.BooleanField(default=False, verbose_name='Синхронізовано з 1С')),
                ('sync_1c_id', models.CharField(blank=True, max_length=50, verbose_name='ID в 1С')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True, verbose_name='Остання синхронізація')),
                ('documents_folder', models.CharField(blank=True, max_length=255, verbose_name='Папка документів')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.department', verbose_name='Підрозділ')),
            ],
            options={
                'verbose_name': 'Користувач',
                'verbose_name_plural': 'Користувачі',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DocumentTab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва табу')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок відображення')),
                ('is_required', models.BooleanField(default=True, verbose_name="Обов'язковий")),
                ('description', models.TextField(blank=True, verbose_name='Опис')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активний')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.department', verbose_name='Підрозділ')),
            ],
            options={
                'verbose_name': 'Таб документів',
                'verbose_name_plural': 'Таби документів',
                'ordering': ['department', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Назва поля')),
                ('field_type', models.CharField(choices=[('file', 'Файл'), ('text', 'Текст'), ('number', 'Число'), ('date', 'Дата'), ('select', 'Вибір')], max_length=20, verbose_name='Тип поля')),
                ('is_required', models.BooleanField(default=True, verbose_name="Обов'язкове")),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('placeholder', models.CharField(blank=True, max_length=255, verbose_name='Підказка')),
                ('validation_rules', models.JSONField(blank=True, null=True, verbose_name='Правила валідації')),
                ('select_options', models.JSONField(blank=True, null=True, verbose_name='Варіанти вибору')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='users.documenttab')),
            ],
            options={
                'verbose_name': 'Поле документа',
                'verbose_name_plural': 'Поля документів',
                'ordering': ['tab', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Токен відновлення паролю',
                'verbose_name_plural': 'Токени відновлення паролів',
            },
        ),
        migrations.CreateModel(
            name='AdminDepartmentAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(limit_choices_to={'role': 'admin'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Адміністратор')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.department', verbose_name='Підрозділ')),
            ],
            options={
                'verbose_name': 'Доступ адміністратора до підрозділу',
                'verbose_name_plural': 'Доступи адміністраторів до підрозділів',
                'unique_together': {('admin', 'department')},
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_value', models.TextField(blank=True, verbose_name='Текстове значення')),
                ('file_value', models.FileField(blank=True, upload_to='temp/', verbose_name='Файл')),
                ('number_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('date_value', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.documentfield', verbose_name='Поле')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.documenttab', verbose_name='Таб')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Користувач')),
            ],
            options={
                'verbose_name': 'Документ користувача',
                'verbose_name_plural': 'Документи користувачів',
                'unique_together': {('user', 'field')},
            },
        ),
        migrations.CreateModel(
            name='UserDocumentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Завершено')),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.documenttab')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Статус документів користувача',
                'verbose_name_plural': 'Статуси документів користувачів',
                'unique_together': {('user', 'tab')},
            },
        ),
    ]
