# backend/setup_media.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–¥—ñ–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É
"""
import os
import sys
from pathlib import Path

def setup_media_directories(media_root):
    """–°—Ç–≤–æ—Ä—é—î –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–µ–¥—ñ–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó"""
    
    # –û—Å–Ω–æ–≤–Ω—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –¥–ª—è —Ñ–∞–π–ª–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç–µ–Ω–¥–µ—Ä—ñ–≤
    directories = [
        'permits', 
        'employees',    # –§–æ—Ç–æ —Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∏ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤
        'technics',     # –î–æ–∫—É–º–µ–Ω—Ç–∏ —Ç–µ—Ö–Ω—ñ–∫–∏  
        'instruments',  # –°–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
        'orders',       # –ù–∞–∫–∞–∑–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏
        'ppe',          # –î–æ–∫—É–º–µ–Ω—Ç–∏ –ó–Ü–ó
        'works',        # –î–æ–∑–≤–æ–ª–∏ –Ω–∞ —Ä–æ–±–æ—Ç–∏
        'temp',         # –¢–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏
        'tenders',     # –§–∞–π–ª–∏ —Ç–µ–Ω–¥–µ—Ä—ñ–≤
    ]
    
    try:
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ—Ä–µ–Ω–µ–≤—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
        Path(media_root).mkdir(parents=True, exist_ok=True)
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –º–µ–¥—ñ–∞ –∫–æ—Ä—ñ–Ω—å: {media_root}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Ç–µ–Ω–¥–µ—Ä—ñ–≤
        tenders_root = Path(media_root) / 'tenders'
        tenders_root.mkdir(exist_ok=True)
        print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–∞–ø–∫—É —Ç–µ–Ω–¥–µ—Ä—ñ–≤: {tenders_root}")
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
        for directory in directories:
            dir_path = Path(media_root) / directory
            dir_path.mkdir(exist_ok=True)
            print(f"‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é: {dir_path}")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É
        test_file = Path(media_root) / 'test_write.txt'
        try:
            test_file.write_text('test')
            test_file.unlink()
            print(f"‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å –≤ {media_root} - OK")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Å—É –≤ {media_root}: {e}")
            return False
            
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    # –û—Ç—Ä–∏–º—É—î–º–æ —à–ª—è—Ö –¥–æ –º–µ–¥—ñ–∞ –∑ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç
    media_root = os.getenv('MEDIA_ROOT', '/data/media')
    
    print(f"üöÄ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –º–µ–¥—ñ–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π...")
    print(f"üìÅ –ú–µ–¥—ñ–∞ –∫–æ—Ä—ñ–Ω—å: {media_root}")
    print(f"üîß –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {os.getuid() if hasattr(os, 'getuid') else 'N/A'}")
    print(f"üíæ –î–æ—Å—Ç—É–ø–Ω–∏–π –ø—Ä–æ—Å—Ç—ñ—Ä: {os.statvfs(os.path.dirname(media_root)).f_bavail * os.statvfs(os.path.dirname(media_root)).f_frsize // (1024**3) if hasattr(os, 'statvfs') else 'N/A'} GB")
    
    if setup_media_directories(media_root):
        print(f"üéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        
        # –í–∏–≤–æ–¥–∏–º–æ –ø—ñ–¥—Å—É–º–æ–∫
        print(f"\nüìä –ü—ñ–¥—Å—É–º–æ–∫:")
        print(f"  - –ú–µ–¥—ñ–∞ –∫–æ—Ä—ñ–Ω—å: {media_root}")
        print(f"  - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞: ‚úÖ")
        print(f"  - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É: ‚úÖ")
        
    else:
        print(f"üí• –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—è –∑ –ø–æ–º–∏–ª–∫–∞–º–∏!")
        sys.exit(1)

if __name__ == '__main__':
    main()